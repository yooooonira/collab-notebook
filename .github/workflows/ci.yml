name: Checks
on:
  push:
    branches: [ main ]

jobs:
  test-lint:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # 필요 시 Docker Hub 로그인 유지 (이미지 푸시 안 하면 생략 가능)
      # - name: Login to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USER }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create .env for dev (SQLite)
        run: |
          echo "DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}" >> drf_api/.env
          echo "DJANGO_ALLOWED_HOSTS=127.0.0.1,localhost" >> drf_api/.env
          echo "DEBUG=1" >> drf_api/.env
          # Supabase를 쓰면 아래도 추가
          # echo "SUPABASE_URL=${{ secrets.SUPABASE_URL }}" >> drf_api/.env
          # echo "SUPABASE_SERVICE_KEY=${{ secrets.SUPABASE_SERVICE_KEY }}" >> drf_api/.env
          # echo "SUPABASE_JWT_SECRET=${{ secrets.SUPABASE_JWT_SECRET }}" >> drf_api/.env

      # 도커 없이 직접 테스트할 수도 있으나, 기존 compose 흐름 유지 시:
      - name: Test
        run: docker compose run --rm app sh -c "python manage.py test"

      - name: Lint
        run: docker compose run --rm app sh -c "flake8 --config=/app/.flake8"